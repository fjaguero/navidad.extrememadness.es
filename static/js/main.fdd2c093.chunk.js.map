{"version":3,"sources":["img/blank.jpg","img/hat.png","img/balls.png","img/bell.png","img/tree.png","img/header.png","Block.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Block","r","react_default","a","createElement","className","alt","src","ballsSrc","hatSrc","bellSrc","_this$props","this","props","date","image","winner","Math","random","$decoration","renderDecoration","blankSrc","treeSrc","concat","React","PureComponent","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","width","height","color","margin","textAlign","App","state","isErrored","isModalOpen","prizes","key","openModal","_this","setState","closeModal","_this2","fetch","method","headers","Content-Type","then","res","json","console","log","map","block","index","src_Block","$blocks","renderBlocks","$content","onClick","headerSrc","lib_default","style","isOpen","onRequestClose","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdd2c093.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank.421c8c7b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hat.4b30701c.png\";","module.exports = __webpack_public_path__ + \"static/media/balls.a18463b3.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.e99fb3d6.png\";","module.exports = __webpack_public_path__ + \"static/media/tree.05855794.png\";","module.exports = __webpack_public_path__ + \"static/media/header.66bfc60d.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport blankSrc from \"./img/blank.jpg\";\nimport hatSrc from \"./img/hat.png\";\nimport ballsSrc from \"./img/balls.png\";\nimport bellSrc from \"./img/bell.png\";\nimport treeSrc from \"./img/tree.png\";\n\nconst propTypes = {\n    date: PropTypes.string.isRequired,\n};\n\nclass Block extends React.PureComponent {\n  renderDecoration(r) {\n    if (r > 0 && r < 0.16) {\n       return <img className=\"decoration balls\" alt=\"Balls\" src={ballsSrc} />\n     } else if (r > 0.16 && r < 0.32) {\n      return <img className=\"decoration hat\" alt=\"Hat\" src={hatSrc} />\n    }\n\n    return <img className=\"decoration bell\" alt=\"Bell\" src={bellSrc} />\n  }\n\n  render() {\n    const { date, image, winner } = this.props;\n    const r = Math.random();\n    const $decoration = this.renderDecoration(r);\n\n    return (\n      <div className=\"block col-xs col-xs-12 col-md-6\">\n        <div className=\"block__date\">{date}</div>\n        <div className=\"block__photo\">\n          {$decoration}\n            {\n              image ? (\n                <img className=\"photo\" src={image} alt=\"Giveaway\" />\n              ) : (\n                <img className=\"photo\" src={blankSrc} alt=\"Giveaway coming soon...\"/>\n              )\n            }\n            {r > 0.5 && <img src={treeSrc}  className=\"tree\" alt=\"Tree\" />}\n        </div>\n        {winner && <div className=\"block__winner\">{`Regalado a ${winner}`}</div>}\n      </div>\n    );\n  }\n}\n\nBlock.propTypes = propTypes;\n\nexport default Block;\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport Block from './Block';\nimport headerSrc from './img/header.png';\n\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,.4)',\n  },\n  content: {\n    position: 'absolute',\n    top: '40px',\n    left: '40px',\n    right: '40px',\n    bottom: '40px',\n    border: '1px solid #ccc',\n    background: '#fff',\n    overflow: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    borderRadius: '4px',\n    outline: 'none',\n    padding: '20px',\n    width: '600px',\n    height: '320px',\n    color: '#000',\n    margin: '0 auto',\n    textAlign: 'center'\n  }\n}\n\nconst API_URL = 'http://localhost:3300/giveaway';\n\nclass App extends Component {\n\n  state = {\n    isErrored: false,\n    isModalOpen: false,\n    prizes: [\n      {\n        \"key\": \"2018-12-23\",\n        \"date\": \"Lunes 24\"\n      },\n      {\n        \"key\": \"2018-12-25\",\n        \"date\": \"Martes 25\"\n      },\n      {\n        \"key\": \"2018-12-26\",\n        \"date\": \"Miércoles 26\"\n      },\n      {\n        \"key\": \"2018-12-27\",\n        \"date\": \"Jueves 27\"\n      },\n      {\n        \"key\": \"2018-12-28\",\n        \"date\": \"Viernes 28\"\n      },\n      {\n        \"key\": \"2018-12-31\",\n        \"date\": \"Lunes 31\"\n      },\n      {\n        \"key\": \"2019-01-01\",\n        \"date\": \"Martes 1\"\n      },\n      {\n        \"key\": \"2019-01-02\",\n        \"date\": \"Miércoles 2\"\n      },\n      {\n        \"key\": \"2019-01-03\",\n        \"date\": \"Jueves 3\"\n      },\n      {\n        \"key\": \"2019-01-04\",\n        \"date\": \"Viernes 4\"\n      }\n    ]\n  }\n\n  componentWillMount() {\n    fetch(API_URL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((prizes) => {\n        console.log(\"prizes\")\n        console.log(prizes)\n         this.setState({ prizes })\n      })\n  }\n\n  openModal = () => {\n    this.setState({ isModalOpen: true });\n  }\n\n  closeModal = () => {\n    this.setState({ isModalOpen: false });\n  }\n\n  renderBlocks() {\n    return this.state.prizes.map((block, index) => (\n      <Block\n        index={index}\n        key={block.key}\n        date={block.date}\n        image={block.image}\n        winner={block.winner}\n      />\n    ));\n  }\n\n  render() {\n    const $blocks = this.renderBlocks();\n    const { isErrored } = this.state;\n    let $content = (\n      <div className=\"blocks-wrapper\">\n        <div className=\"row\">\n          {$blocks}\n        </div>\n        <button className=\"btn btn-info\" onClick={this.openModal}>Términos del sorteo</button>\n      </div>\n    );\n\n    if (isErrored) $content = <h2>Ha ocurrido un error</h2>;\n\n    return (\n      <div>\n        <h1 className=\"title\">\n          <img src={headerSrc} alt=\"Sorteo de Navidad\" />\n        </h1>\n        <div className=\"wrap container-fluid\">\n          {$content}\n        </div>\n        <Modal\n          style={customStyles}\n          isOpen={this.state.isModalOpen}\n          onRequestClose={this.closeModal}\n        >\n          <h1>Términos del sorteo</h1>\n          <ul className=\"list\">\n            <li>Podrán participar los suscriptores y los patrons.</li>\n            <li>Comenzará el día 24 de diciembre y finalizará el 4 de enero (a excepción del fin de semana). Los premios se sortearán offline (días 31 y 1) y en streaming.</li>\n            <li>El ganador de uno de los premios puede decidir no quedárselo, en ese caso se hará reroll.</li>\n            <li>Los participantes podrán ganar un máximo de un premio.</li>\n            <li>Los premios físicos sólo se enviarán a nivel nacional.</li>\n          </ul>\n          <button onClick={this.closeModal}>Cerrar</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport \"flexboxgrid/dist/flexboxgrid.css\";\nimport \"normalize.css/normalize.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}